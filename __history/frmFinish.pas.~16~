unit frmFinish;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, Vcl.Buttons,
  Vcl.Grids, Vcl.DBGrids;

type
  Tfrm_finish = class(TForm)
    lbl_tag_doing_qty: TLabel;
    lbl_tag_good_qty: TLabel;
    lbl_tag_bad_qty: TLabel;
    lbl_bad_qty: TLabel;
    lbl_good_qty: TLabel;
    lbl_doing_qty: TLabel;
    lbl_tag_product_code: TLabel;
    lbl_product_code: TLabel;
    sbt_submit: TSpeedButton;
    dbg_badmode: TDBGrid;
    lbl_tag_container: TLabel;
    lbl_container: TLabel;
    Memo1: TMemo;
    procedure sbt_submitClick(Sender: TObject);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_finish: Tfrm_finish;
  uvInput : String;
  uvStart : DWORD;

implementation

uses dataModule, publicLib, SuperObject;

{$R *.dfm}

procedure Tfrm_finish.FormKeyPress(Sender: TObject; var Key: Char);
const
  vInputLen = 6;
var
  vFinish: DWORD;
  vO: ISuperObject;
  vStaff_code, vStaff_name: String;
begin
  if uvInput = '' then uvStart := GetTickCount();
  if (Length(uvInput) >= vInputLen) AND (Key=#13) then
    begin
      vFinish := GetTickCount();
      if (vFinish - uvStart) / Length(uvInput) < 100 then
        begin
          if copy(uvInput,1,2)='AT' then  //扫描到的是工单
            begin
              vO := SO(scanContainer(uvInput));
              if vO.B['result.success'] then  //成功扫描到容器
                begin
                  memo1.Lines.Add(vO.S['result']);
                  {
                      gvWorkorder_id := vO.I['result.workorder_id'];
                      gvWorkorder_name := vO.S['result.workorder_name'];
                      lbl_wo.Caption := gvWorkorder_name;
                      gvWorkticket_id := vO.I['result.workticket_id'];
                      gvWorkticket_name := vO.S['result.workticket_name'];
                      gvWorkticket_state := vO.S['result.state'];
                      lbl_state.Caption := gvWorkticket_state;
                      gvProduct_code := vO.S['result.product_code'];
                      lbl_product_code.Caption := gvProduct_code;
                      gvInput_qty := vO.C['result.input_qty'];
                      lbl_todo_qty.Caption := FloatToStr(gvInput_qty);
                      gvOutput_qty := vO.C['result.output_qty'];
                      lbl_good_qty.Caption := FloatToStr(gvOutput_qty);
                      gvBadmode_qty := vO.C['result.badmode_qty'];
                      lbl_bad_qty.Caption := FloatToStr(gvBadmode_qty);
                      lbl_done_qty.Caption := FloatToStr(gvOutput_qty+gvBadmode_qty);
                      gvLastworkcenter := vO.B['result.lastworkcenter'];
                      log(DateTimeToStr(now())+', [INFO] 工单号【'+copy(uvInput,3,Length(uvInput)-2)+'】的扫描成功成功！');
                   }
                end
              else  //扫描工单失败
                begin
                  log(DateTimeToStr(now())+', [ERROR]  容器号【'+copy(uvInput,3,Length(uvInput)-2)+'】扫描失败，错误信息：'+vO.S['result.message']);
                end;
            end;
        end
      else
        log(DateTimeToStr(now())+', [ERROR] 错误输入:' + uvInput);
      uvInput := '';
    end
  else
    begin
      uvInput := uvInput + Key;
    end;
end;

procedure Tfrm_finish.sbt_submitClick(Sender: TObject);
begin
  if gvline_type='flowing' then    //主线上
    begin
      //
    end
  else if gvline_type='station' then    //工作站
    begin
      if gvLastworkcenter then    //如果是最后一道工序必须扫描容器
        begin
          //
        end
      else
        begin
          //
        end;
    end;
end;

end.
